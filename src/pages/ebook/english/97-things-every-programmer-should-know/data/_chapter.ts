const chapter = [
  'Thing 01: Act with Prudence',
  'Thing 02: Apply Functional Programming Principles',
  'Thing 03: Ask "What Would the User Do?" (You Are not the User)',
  'Thing 04: Automate Your Coding Standard',
  'Thing 05: Beauty Is in Simplicity',
  'Thing 06: Before You Refactor',
  'Thing 07: Beware the Share',
  'Thing 08: The Boy Scout Rule',
  'Thing 09: Check Your Code First before Looking to Blame Others',
  'Thing 10: Choose Your Tools with Care',
  'Thing 11: Code in the Language of the Domain',
  'Thing 12: Code Is Design',
  'Thing 13: Code Layout Matters',
  'Thing 14: Code Reviews',
  'Thing 15: Coding with Reason',
  'Thing 16: A Comment on Comments',
  'Thing 17: Comment Only What the Code Cannot Say',
  'Thing 18: Continuous Learning',
  'Thing 19: Convenience Is not an -ility',
  'Thing 20: Deploy Early and Often',
  'Thing 21: Distinguish Business Exceptions from Technical',
  'Thing 22: Do Lots of Deliberate Practice',
  'Thing 23: Domain-Specific Languages',
  "Thing 24: Don't Be Afraid to Break Things",
  "Thing 25: Don't Be Cute with Your Test Data",
  "Thing 26: Don't Ignore that Error!",
  "Thing 27: Don't Just Learn the Language, Understand its Culture",
  "Thing 28: Don't Nail Your Program into the Upright Position",
  'Thing 29: Don\'t Rely on "Magic Happens Here"',
  "Thing 30: Don't Repeat Yourself",
  "Thing 31: Don't Touch that Code!",
  'Thing 32: Encapsulate Behavior, not Just State',
  "Thing 33: Floating-point Numbers Aren't Real",
  'Thing 34: Fulfill Your Ambitions with Open Source',
  'Thing 35: The Golden Rule of API Design',
  'Thing 36: The Guru Myth',
  'Thing 37: Hard Work Does not Pay Off',
  'Thing 38: How to Use a Bug Tracker',
  'Thing 39: Improve Code by Removing It',
  'Thing 40: Install Me',
  'Thing 41: Inter-Process Communication Affects Application Response Time',
  'Thing 42: Keep the Build Clean',
  'Thing 43: Know How to Use Command-line Tools',
  'Thing 44: Know Well More than Two Programming Languages',
  'Thing 45: Know Your IDE',
  'Thing 46: Know Your Limits',
  'Thing 47: Know Your Next Commit',
  'Thing 48: Large Interconnected Data Belongs to a Database',
  'Thing 49: Learn Foreign Languages',
  'Thing 50: Learn to Estimate',
  'Thing 51: Learn to Say "Hello, World"',
  'Thing 52: Let Your Project Speak for Itself',
  'Thing 53: The Linker Is not a Magical Program',
  'Thing 54: The Longevity of Interim Solutions',
  'Thing 55: Make Interfaces Easy to Use Correctly and Hard to Use Incorrectly',
  'Thing 56: Make the Invisible More Visible',
  'Thing 57: Message Passing Leads to Better Scalability in Parallel Systems',
  'Thing 58: A Message to the Future',
  'Thing 59: Missing Opportunities for Polymorphism',
  'Thing 60: News of the Weird: Testers Are Your Friends',
  'Thing 61: One Binary',
  'Thing 62: Only the Code Tells the Truth',
  'Thing 63: Own (and Refactor) the Build',
  'Thing 64: Pair Program and Feel the Flow',
  'Thing 65: Prefer Domain-Specific Types to Primitive Types',
  'Thing 66: Prevent Errors',
  'Thing 67: The Professional Programmer',
  'Thing 68: Put Everything Under Version Control',
  'Thing 69: Put the Mouse Down and Step Away from the Keyboard',
  'Thing 70: Read Code',
  'Thing 71: Read the Humanities',
  'Thing 72: Reinvent the Wheel Often',
  'Thing 73: Resist the Temptation of the Singleton Pattern',
  'Thing 74: The Road to Performance Is Littered with Dirty Code Bombs',
  'Thing 75: Simplicity Comes from Reduction',
  'Thing 76: The Single Responsibility Principle',
  'Thing 77: Start from Yes',
  'Thing 78: Step Back and Automate, Automate, Automate',
  'Thing 79: Take Advantage of Code Analysis Tools',
  'Thing 80: Test for Required Behavior, not Incidental Behavior',
  'Thing 81: Test Precisely and Concretely',
  'Thing 82: Test While You Sleep (and over Weekends)',
  'Thing 83: Testing Is the Engineering Rigor of Software Development',
  'Thing 84: Thinking in States',
  'Thing 85: Two Heads Are Often Better than One',
  'Thing 86: Two Wrongs Can Make a Right (and Are Difficult to Fix)',
  'Thing 87: Ubuntu Coding for Your Friends',
  'Thing 88: The Unix Tools Are Your Friends',
  'Thing 89: Use the Right Algorithm and Data Structure',
  'Thing 90: Verbose Logging Will Disturb Your Sleep',
  'Thing 91: WET Dilutes Performance Bottlenecks',
  'Thing 92: When Programmers and Testers Collaborate',
  'Thing 93: Write Code as If You Had to Support It for the Rest of Your Life',
  'Thing 94: Write Small Functions Using Examples',
  'Thing 95: Write Tests for People',
  'Thing 96: You Gotta Care About the Code',
  'Thing 97: Your Customers Do not Mean What They Say',
];

const _97thingsChapter: {
  text: string;
  path: string;
}[] = [];

for (let i = 0; i < chapter.length; i++) {
  _97thingsChapter.push({
    text: chapter[i],
    path: `/ebook/english/97-things-every-programmer-should-know/${i + 1}`,
  });
}

export default _97thingsChapter;
