import IContent from 'utils/interface';

export const chapter11_1: IContent[] = [
  {
    title: '',
    no: false,
    contents: [
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_1.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `Proxy Pattern ‚Äì Ki·ªÉm so√°t truy c·∫≠p ƒë·ªëi t∆∞·ª£ng`,
    contents: [
      {
        div: `<p>
        B·∫°n ƒë√£ bao gi·ªù ch∆°i tr√≤ ‚ÄúGood cop, bad cop‚Äù (c·∫£nh s√°t t·ªët, c·∫£nh s√°t x·∫•u) ch∆∞a?
        B·∫°n l√† m·ªôt ‚Äúc·∫£nh s√°t t·ªët‚Äù v√† b·∫°n cung c·∫•p t·∫•t c·∫£ c√°c ‚Äúd·ªãch v·ª•‚Äù c·ªßa m√¨nh m·ªôt
        c√°ch th√¢n thi·ªán v√† t·ªët ƒë·∫πp, nh∆∞ng b·∫°n kh√¥ng mu·ªën m·ªçi ng∆∞·ªùi y√™u c·∫ßu v·ªÅ c√°c d·ªãch
        v·ª• m√† h·ªç kh√¥ng ƒë∆∞·ª£c ph√©p, v√¨ v·∫≠y b·∫°n c√≥ m·ªôt ‚Äúc·∫£nh s√°t x·∫•u‚Äù ƒë·ªÉ ki·ªÉm so√°t c√°c
        y√™u c·∫ßu. ƒê√≥ l√† nh·ªØng g√¨ <strong>Proxy pattern</strong> l√†m: ki·ªÉm so√°t v√† qu·∫£n
        l√Ω truy c·∫≠p. Nh∆∞ b·∫°n s·∫Ω th·∫•y, c√≥ r·∫•t nhi·ªÅu c√°ch ƒë·ªÉ <strong>Proxy</strong> thay
        th·∫ø cho c√°c ƒë·ªëi t∆∞·ª£ng m√† ch√∫ng ·ªßy quy·ªÅn th·ª±c hi·ªán. Proxy ƒë∆∞·ª£c bi·∫øt l√† th·ª©
        chuy·ªÉn to√†n b·ªô c√°c cu·ªôc g·ªçi ph∆∞∆°ng th·ª©c qua Internet ƒë·∫øn c√°c ƒë·ªëi t∆∞·ª£ng ƒë∆∞·ª£c ·ªßy
        quy·ªÅn; Ch√∫ng c≈©ng ƒë∆∞·ª£c bi·∫øt l√† ki√™n nh·∫´n ·ªü m·ªôt ch·ªó cho m·ªôt s·ªë ƒë·ªëi t∆∞·ª£ng ‚Äúl∆∞·ªùi
        bi·∫øng‚Äù (lazy objects).
      </p>
      
      <p>
        C·∫£nh b√°o: Ch∆∞∆°ng n√†y n·∫∑ng l√Ω thuy·∫øt v·ªÅ l·∫≠p tr√¨nh Network Java RMI (Remote
        Method Invocation), h√£y ƒë·ªçc ch∆∞∆°ng n√†y khi b·∫°n ƒë√£ bi·∫øt v·ªÅ Java RMI ho·∫∑c khi
        b·∫°n ƒëang t·∫≠p trung h·∫øt s·ª©c. C√≥ th·ªÉ b·ªè qua v√† xem ƒë·∫øn ch∆∞∆°ng ti·∫øp theo, ch√∫ng
        kh√¥ng ·∫£nh h∆∞·ªüng!
      </p>
      
      <p>
        <em
          ><strong
            >Note c·ªßa ng∆∞·ªùi d·ªãch: h√£y ƒë·ªçc h·∫øt ch∆∞∆°ng n√†y v√† quay l·∫°i ƒë√¢y ƒë·ªÉ hi·ªÉu t√¥i
            ƒëang n√≥i g√¨!!!</strong
          ></em
        >
        üòâ
      </p>
      
      <p>
        <em>‚ÄúGood cop, bad cop‚Äù (</em> <em>‚ÄúC·∫£nh s√°t t·ªët/C·∫£nh s√°t x·∫•u‚Äù </em> ho·∫∑c ‚Äú<em
          >Ch√≠nh di·ªán/Ph·∫£n di·ªán</em
        >‚Äù ho·∫∑c ‚Äú<em>M·∫∑t xanh/M·∫∑t ƒë·ªè</em>‚Äú)
        <em>l√† m·ªôt k·ªπ thu·∫≠t ƒë√†m ph√°n ho·∫∑c th·∫©m v·∫•n. </em>
        <em
          >‚ÄúC·∫£nh s√°t x·∫•u‚Äù c√≥ l·∫≠p tr∆∞·ªùng m·∫°nh m·∫Ω, ti√™u c·ª±c ƒë·ªëi v·ªõi ƒë·ªëi t∆∞·ª£ng, ƒë∆∞a ra
          nh·ªØng l·ªùi bu·ªôc t·ªôi tr·∫Øng tr·ª£n, b√¨nh lu·∫≠n x√∫c ph·∫°m, ƒëe d·ªça v√† n√≥i chung t·∫°o
          ra √°c c·∫£m gi·ªØa t·ªôi ph·∫°m v√† ch√≠nh h·ªç. ƒêi·ªÅu n√†y t·∫°o ti·ªÅn ƒë·ªÅ cho ‚Äú</em
        >
        <em
          >C·∫£nh s√°t t·ªët‚Äù h√†nh ƒë·ªông th√¥ng c·∫£m, t·ªè ra ·ªßng h·ªô v√† th·∫•u hi·ªÉu v√† n√≥i chung
          th·ªÉ hi·ªán s·ª± ƒë·ªìng c·∫£m v·ªõi ƒë·ªëi t∆∞·ª£ng. ƒê·ªëi t∆∞·ª£ng c√≥ th·ªÉ c·∫£m th·∫•y h·ªç c√≥ th·ªÉ h·ª£p
          t√°c v·ªõi ‚Äúc·∫£nh s√°t t·ªët‚Äù ho·∫∑c kh√¥ng tin t∆∞·ªüng ho·∫∑c s·ª£ c·∫£nh s√°t x·∫•u. Sau ƒë√≥, h·ªç
          c√≥ th·ªÉ t√¨m ki·∫øm s·ª± b·∫£o v·ªá v√† tin t∆∞·ªüng c·∫£nh s√°t t·ªët v√† cung c·∫•p th√¥ng tin m√†
          c√°c th·∫©m v·∫•n vi√™n ƒëang t√¨m ki·∫øm.</em
        >
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_2.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        Nghe th·∫≠t d·ªÖ d√†ng. N·∫øu b·∫°n c√≤n nh·ªõ, ch√∫ng t√¥i ƒë√£ c√≥ c√°c ph∆∞∆°ng th·ª©c trong code
        <strong>Gumball Machine</strong> ƒë·ªÉ l·∫•y s·ªë l∆∞·ª£ng k·∫πo cao su
        (<strong>getCount()</strong>) v√† l·∫•y tr·∫°ng th√°i hi·ªán t·∫°i c·ªßa m√°y
        (<strong>getState()</strong>).
      </p>
      
      <p>
        T·∫•t c·∫£ nh·ªØng g√¨ ch√∫ng ta c·∫ßn l√†m l√† t·∫°o m·ªôt b√°o c√°o c√≥ th·ªÉ ƒë∆∞·ª£c in ra v√† g·ª≠i
        l·∫°i cho CEO. Hmmm, c√≥ l·∫Ω ch√∫ng ta c≈©ng n√™n th√™m m·ªôt tr∆∞·ªùng ‚Äúv·ªã tr√≠ ƒë·∫∑t m√°y‚Äù
        (location) v√†o m·ªói Gumball machine; B·∫±ng c√°ch ƒë√≥, CEO c√≥ th·ªÉ bi·∫øt nh·ªØng c√°i
        m√°y b·∫Øn k·∫πo hi·ªán ƒëang ·ªü ƒë√¢u.
      </p>
      
      <p>
        H√£y ng·ªìi v√†o v√† vi·∫øt ƒëo·∫°n code n√†y. Ch√∫ng t√¥i s·∫Ω g√¢y ·∫•n t∆∞·ª£ng v·ªõi CEO b·∫±ng m·ªôt
        b∆∞·ªõc ngo·∫∑c r·∫•t l·ªõn.
      </p>
      
      <p>
        <strong
          >Note c·ªßa ng∆∞·ªùi d·ªãch: Tr∆∞·ªõc khi ƒë·ªçc ti·∫øp, h√£y ƒë·∫£m b·∫£o b·∫°n bi·∫øt ƒëi·ªÅu n√†y:
          <br />‚Äì MonitorMachine ‚Äì l√† Client (M√°y kh√°ch) ‚Äì L√† m√†n h√¨nh gi√°m s√°t c·ªßa
          CEO.<br />‚Äì GumballMachine ‚Äì l√† Server (M√°y ch·ªß) ‚Äì L√† m√°y b·∫Øn k·∫πo cao su, ·ªü
          m·ªôt n∆°i xa CEO.</strong
        >
      </p>`,
      },
    ],
  },
  {
    title: `Coding cho Monitor (M√°y gi√°m s√°t c·ªßa CEO)`,
    contents: [
      {
        div: `<p>
        H√£y b·∫Øt ƒë·∫ßu b·∫±ng c√°ch th√™m h·ªó tr·ª£ cho l·ªõp <strong>GumballMachine</strong> ƒë·ªÉ
        n√≥ c√≥ th·ªÉ x·ª≠ l√Ω c√°c location:
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_3.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        p: `<p class="text-center"><small>Class GumballMachine</small></p>`,
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        B√¢y gi·ªù, h√£y ƒë·ªÉ cho t·∫°o m·ªôt l·ªõp kh√°c, <strong>GumballMonitor</strong>, l·∫•y ra
        v·ªã tr√≠ c·ªßa m√°y, s·ªë l∆∞·ª£ng k·∫πo cao su, tr·∫°ng th√°i m√°y hi·ªán t·∫°i v√† in ch√∫ng trong
        m·ªôt b√°o c√°o:
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_4.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        p: `<p class="text-center"><small>Class GumballMonitor</small></p>`,
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `Testing cho Monitor`,
    contents: [
      {
        div: `<p>
        Ch√∫ng t√¥i th·ª±c hi·ªán ƒëi·ªÅu ƒë√≥ r·∫•t r·∫•t nhanh. Gi√°m ƒë·ªëc ƒëi·ªÅu h√†nh s·∫Ω vui m·ª´ng v√†
        ng·∫°c nhi√™n tr∆∞·ªõc c√°c k·ªπ nƒÉng l·∫≠p tr√¨nh c·ªßa ch√∫ng t√¥i.
      </p>
      
      <p>
        B√¢y gi·ªù ch√∫ng ta ch·ªâ c·∫ßn kh·ªüi t·∫°o <strong>GumballMonitor</strong> (m√°y gi√°m
        s√°t) v√† cung c·∫•p cho n√≥ m·ªôt ƒë·ªëi t∆∞·ª£ng <strong>GumballMachine</strong> (m√°y b·∫Øn
        k·∫πo) ƒë·ªÉ theo d√µi:
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_5.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        p: `<p class="text-center"><small>Class GumballMachineTestDrive</small></p>`,
      },
      {
        div: `<br />`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_6.jpg`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_7.jpg`),
          width: `70%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p><strong>Joe:</strong> M·ªôt c√°i g√¨ xa?</p>

        <p>
          <strong>Frank:</strong> Proxy t·ª´ xa. H√£y suy nghƒ© v·ªÅ n√≥: ch√∫ng ta ƒë√£ c√≥ code
          cho m√†n h√¨nh gi√°m s√°t (monitor) ƒë∆∞·ª£c vi·∫øt, ph·∫£i kh√¥ng? Ch√∫ng ta cung c·∫•p cho
          <strong>GumballMonitor</strong> m·ªôt tham chi·∫øu t·ªõi m·ªôt c√°i m√°y b·∫Øn k·∫πo v√† n√≥
          s·∫Ω cung c·∫•p cho ch√∫ng ta m·ªôt b√°o c√°o. V·∫•n ƒë·ªÅ l√† m√†n h√¨nh gi√°m s√°t v·ªõi m√°y b·∫Øn
          k·∫πo cao su ch·∫°y trong c√πng m·ªôt JVM nh∆∞ng CEO mu·ªën ng·ªìi v√†o b√†n c·ªßa m√¨nh v√†
          gi√°m s√°t m√°y t·ª´ xa (m√†n h√¨nh v√† m√°y b·∫Øn k·∫πo 2 n∆°i kh√°c nhau)! V·∫≠y ƒëi·ªÅu g√¨ s·∫Ω
          x·∫£y ra n·∫øu ch√∫ng ta kh√¥ng c√≤n ·ªü l·ªõp <strong>GumballMonitor</strong>, nh∆∞ng
          ch√∫ng ta ƒë√£ ƒë∆∞a cho n√≥ cho m·ªôt ƒë·ªëi t∆∞·ª£ng t·ª´ xa?
        </p>
        
        <p><strong>Joe:</strong> T√¥i kh√¥ng ch·∫Øc ch·∫Øn ch√∫ng ta c√≥ ƒë∆∞·ª£c n√≥.</p>
        
        <p><strong>Jim:</strong> T√¥i c≈©ng v·∫≠y.</p>
        
        <p>
          <strong>Frank: </strong>H√£y b·∫Øt ƒë·∫ßu ngay t·ª´ ƒë·∫ßu ‚Ä¶ m·ªôt proxy l√† m·ªôt thay th·∫ø
          cho m·ªôt ƒë·ªëi t∆∞·ª£ng th·ª±c s·ª±. Trong tr∆∞·ªùng h·ª£p n√†y, proxy ho·∫°t ƒë·ªông gi·ªëng nh∆∞ n√≥
          l√† m·ªôt ƒë·ªëi t∆∞·ª£ng <strong>GumballMachine</strong>, nh∆∞ng ƒë·∫±ng sau ƒë√≥, n√≥ ƒëang
          li√™n l·∫°c qua network ƒë·ªÉ n√≥i chuy·ªán v·ªõi <strong>GumballMachine </strong
          ><em>th·ª±c s·ª±</em>, t·ª´ xa.
        </p>
        
        <p>
          <strong>Jim:</strong> V√¨ v·∫≠y, b·∫°n n√≥i r·∫±ng ch√∫ng ta gi·ªØ nguy√™n code c·ªßa m√¨nh
          v√† ch√∫ng ta s·∫Ω cung c·∫•p cho <strong>Monitor </strong>m·ªôt tham chi·∫øu ƒë·∫øn phi√™n
          b·∫£n proxy c·ªßa <strong>GumballMachine</strong>‚Ä¶
        </p>
        <p>
          <strong>Joe:</strong> V√† proxy n√†y gi·∫£ v·ªù n√≥ l√† ƒë·ªëi t∆∞·ª£ng th·∫≠t, nh∆∞ng n√≥ th·ª±c
          s·ª± ch·ªâ l√† giao ti·∫øp qua m·∫°ng v·ªõi ƒë·ªëi t∆∞·ª£ng th·∫≠t.
        </p>
        
        <p><strong>Frank:</strong> V√¢ng, n√≥ c√≥ kh√° nhi·ªÅu vi·ªác.</p>
        
        <p><strong>Joe:</strong> Nghe c√≥ v·∫ª nh∆∞ n√≥i d·ªÖ h∆°n l√†m.</p>
        
        <p>
          <strong>Frank:</strong> C√≥ l·∫Ω, nh∆∞ng t√¥i kh√¥ng nghƒ© r·∫±ng n√≥ s·∫Ω t·ªá ƒë·∫øn th·∫ø.
          Ch√∫ng t√¥i ph·∫£i ƒë·∫£m b·∫£o r·∫±ng m√°y b·∫Øn k·∫πo cao su c√≥ th·ªÉ ho·∫°t ƒë·ªông nh∆∞ m·ªôt d·ªãch
          v·ª• v√† ch·∫•p nh·∫≠n c√°c y√™u c·∫ßu qua m·∫°ng; ch√∫ng ta c≈©ng c·∫ßn cung c·∫•p cho
          <strong>MonitorMachine </strong>c·ªßa m√¨nh m·ªôt c√°ch ƒë·ªÉ c√≥ ƒë∆∞·ª£c m·ªôt tham chi·∫øu
          ƒë·∫øn m·ªôt ƒë·ªëi t∆∞·ª£ng proxy, nh∆∞ng ch√∫ng ta ƒë√£ c√≥ m·ªôt s·ªë c√¥ng c·ª• tuy·ªát v·ªùi ƒë∆∞·ª£c
          t√≠ch h·ª£p s·∫µn trong Java ƒë·ªÉ gi√∫p ch√∫ng ta. Tr∆∞·ªõc ti√™n, h√£y n√≥i th√™m m·ªôt ch√∫t v·ªÅ
          remote proxy‚Ä¶
        </p>`,
      },
    ],
  },
  {
    title: `Vai tr√≤ c·ªßa ‚Äúremote proxy‚Äù`,
    contents: [
      {
        div: `<p>
        M·ªôt ‚Äúremote proxy‚Äù ho·∫°t ƒë·ªông nh∆∞ m·ªôt ƒë·ªëi t∆∞·ª£ng ƒë·∫°i di·ªán (·ªü c·ª•c b·ªô) (local
        representative) cho m·ªôt ƒë·ªëi t∆∞·ª£ng t·ª´ xa (remote object).&nbsp;
      </p>
      
      <p>
        C√°i g√¨ l√† ‚Äúremote object‚Äù? N√≥ l√† m·ªôt m·ªôt ƒë·ªëi t∆∞·ª£ng t·ªìn t·∫°i trong v√πng nh·ªõ heap
        c·ªßa m·ªôt Java Virtual Machine kh√°c (hay n√≥i chung h∆°n l√† m·ªôt remote object ƒëang
        ch·∫°y trong m·ªôt kh√¥ng gian ƒë·ªãa ch·ªâ kh√°c).
      </p>
      
      <p>
        C√°i g√¨ l√† m·ªôt ‚Äúlocal representative‚Äù? N√≥ l√† m·ªôt ƒë·ªëi t∆∞·ª£ng m√† b·∫°n c√≥ th·ªÉ g·ªçi
        c√°c ph∆∞∆°ng th·ª©c ·ªü c·ª•c b·ªô v√† chuy·ªÉn ti·∫øp ch√∫ng ƒë·∫øn remote object.
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_8.jpg`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        <strong
          ><em
            >ƒê·ªëi t∆∞·ª£ng kh√°ch h√†ng (MornitorMachine) c·ªßa b·∫°n ho·∫°t ƒë·ªông gi·ªëng nh∆∞ n√≥
            th·ª±c hi·ªán c√°c cu·ªôc g·ªçi ph∆∞∆°ng th·ª©c t·ª´ xa. Nh∆∞ng nh·ªØng g√¨ n√≥ th·ª±c s·ª± l√†m l√†
            g·ªçi c√°c ph∆∞∆°ng th·ª©c tr√™n m·ªôt ƒë·ªëi t∆∞·ª£ng proxy c·ª•c b·ªô x·ª≠ l√Ω t·∫•t c·∫£ c√°c chi
            ti·∫øt c·∫•p th·∫•p c·ªßa giao ti·∫øp m·∫°ng.</em
          ></strong
        >
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_9.jpg`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `S·ª©c m·∫°nh b·ªô n√£o`,
    contents: [
      {
        div: `<p>
        Tr∆∞·ªõc khi ƒëi xa h∆°n, h√£y suy nghƒ© v·ªÅ c√°ch b·∫°n thi·∫øt k·∫ø m·ªôt h·ªá th·ªëng ƒë·ªÉ cho
        ph√©p g·ªçi ph∆∞∆°ng th·ª©c t·ª´ xa. L√†m th·∫ø n√†o b·∫°n c√≥ th·ªÉ l√†m cho n√≥ d·ªÖ d√†ng v·ªõi nh√†
        ph√°t tri·ªÉn ƒë·ªÉ c√≥ th·ªÉ vi·∫øt c√†ng √≠t code c√†ng t·ªët? L√†m th·∫ø n√†o b·∫°n s·∫Ω l√†m cho
        c√°c cu·ªôc g·ªçi t·ª´ xa tr√¥ng li·ªÅn m·∫°ch?
      </p>
      
      <p><strong>S·ª©c m·∫°nh b·ªô n√£o 2</strong></p>
      
      <p>
        C√≥ n√™n th·ª±c hi·ªán c√°c cu·ªôc g·ªçi t·ª´ xa ho√†n to√†n minh b·∫°ch? ƒê√≥ c√≥ ph·∫£i l√† m·ªôt √Ω
        t∆∞·ªüng t·ªët? ƒêi·ªÅu g√¨ c√≥ th·ªÉ l√† m·ªôt v·∫•n ƒë·ªÅ v·ªõi c√°ch ti·∫øp c·∫≠n ƒë√≥?
      </p>
      `,
      },
    ],
  },
  {
    title: `Th√™m remote proxy v√†o Gumball Machine monitoring code`,
    contents: [
      {
        div: `<p>
        Tr√™n gi·∫•y t·ªù, ƒëi·ªÅu n√†y c√≥ v·∫ª t·ªët, nh∆∞ng l√†m th·∫ø n√†o ƒë·ªÉ ch√∫ng ta t·∫°o m·ªôt proxy
        bi·∫øt c√°ch g·ªçi m·ªôt ph∆∞∆°ng th·ª©c tr√™n m·ªôt ƒë·ªëi t∆∞·ª£ng t·ªìn t·∫°i trong m·ªôt JVM kh√°c?
      </p>
      
      <p>
        H·ª´m. Ch√†, b·∫°n kh√¥ng th·ªÉ c√≥ ƒë∆∞·ª£c m·ªôt tham chi·∫øu cho m·ªôt c√°i g√¨ ƒë√≥ tr√™n m·ªôt v√πng
        nh·ªõ heap kh√°c, ph·∫£i kh√¥ng? N√≥i c√°ch kh√°c, b·∫°n kh√¥ng th·ªÉ l√†m ƒëi·ªÅu n√†y:
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_10.png`),
          width: `40%`,
          align: `left`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        B·∫•t c·ª© bi·∫øn <strong>d</strong> n√†o ƒë∆∞·ª£c tham chi·∫øu ƒë·ªÅu ph·∫£i n·∫±m trong c√πng m·ªôt
        v√πng heap gi·ªëng nh∆∞ code ƒëang ch·∫°y c√¢u l·ªánh. V·∫≠y l√†m th·∫ø n√†o ƒë·ªÉ ch√∫ng ta ti·∫øp
        c·∫≠n ƒëi·ªÅu n√†y? Ch√†, ƒë√≥ l√† n∆°i m√† <strong>Remote Method Invocation</strong> xu·∫•t
        hi·ªán‚Ä¶ RMI cho ch√∫ng ta m·ªôt c√°ch ƒë·ªÉ t√¨m c√°c ƒë·ªëi t∆∞·ª£ng trong m·ªôt JVM t·ª´ xa v√†
        cho ph√©p ch√∫ng ta g·ªçi c√°c ph∆∞∆°ng th·ª©c c·ªßa ch√∫ng.
      </p>
      
      <p>
        B·∫°n c√≥ th·ªÉ ƒë√£ g·∫∑p RMI trong cu·ªën
        <strong
          ><a
            href="https://www.oreilly.com/library/view/head-first-java/0596009208/"
            target="_blank"
            rel="noreferrer noopener"
            >Head First Java</a
          ></strong
        >; n·∫øu ch∆∞a, ch√∫ng ta s·∫Ω ƒëi ƒë∆∞·ªùng v√≤ng nh·∫π v√† tƒÉng t·ªëc ƒë·ªô tr√™n RMI tr∆∞·ªõc khi
        th√™m proxy helper v√†o code c·ªßa <strong>Gumball Machine</strong>.
      </p>
      
      <p>V√¨ v·∫≠y, ƒë√¢y l√† nh·ªØng g√¨ ch√∫ng ta s·∫Ω l√†m:</p>
      
      <ol>
        <li>
          ƒê·∫ßu ti√™n, ch√∫ng t√¥i s·∫Ω xem qua <strong>RMI Detour</strong> v√† ki·ªÉm tra RMI.
          Ngay c·∫£ khi b·∫°n ƒë√£ quen thu·ªôc v·ªõi RMI, b·∫°n c√≥ th·ªÉ mu·ªën nh√¨n l·∫°i m·ªôt ch√∫t.
        </li>
        <li>
          Sau ƒë√≥, ch√∫ng t√¥i s·∫Ω l·∫•y <strong>GumballMachine </strong>c·ªßa ch√∫ng t√¥i v√†
          bi·∫øn n√≥ th√†nh m·ªôt d·ªãch v·ª• t·ª´ xa cung c·∫•p m·ªôt t·∫≠p h·ª£p c√°c ph∆∞∆°ng th·ª©c c√≥ th·ªÉ
          ƒë∆∞·ª£c g·ªçi t·ª´ xa.
        </li>
        <li>
          Sau ƒë√≥, ch√∫ng t√¥i s·∫Ω t·∫°o m·ªôt proxy c√≥ th·ªÉ giao ti·∫øp v·ªõi GumballMachine t·ª´
          xa, m·ªôt l·∫ßn n·ªØa s·ª≠ d·ª•ng RMI v√† ƒë·∫∑t h·ªá th·ªëng gi√°m s√°t MornitorMachine l·∫°i v·ªõi
          nhau ƒë·ªÉ CEO c√≥ th·ªÉ gi√°m s√°t b·∫•t k·ª≥ s·ªë l∆∞·ª£ng m√°y t·ª´ xa n√†o.
        </li>
      </ol>`,
      },
    ],
  },
  {
    title: `Remote methods 101  `,
    contents: [
      {
        div: `<p>
        H√£y n√≥i r·∫±ng ch√∫ng ta mu·ªën thi·∫øt k·∫ø m·ªôt h·ªá th·ªëng cho ph√©p ch√∫ng ta g·ªçi m·ªôt ƒë·ªëi
        t∆∞·ª£ng c·ª•c b·ªô (<strong>local object</strong>) chuy·ªÉn ti·∫øp t·ª´ng y√™u c·∫ßu ƒë·∫øn m·ªôt
        ƒë·ªëi t∆∞·ª£ng ·ªü xa (<strong>remote object</strong>). Ch√∫ng ta s·∫Ω thi·∫øt k·∫ø n√≥ nh∆∞
        th·∫ø n√†o? Ch√∫ng ta c·∫ßn m·ªôt v√†i ƒë·ªëi t∆∞·ª£ng tr·ª£ gi√∫p (<strong
          >helper objects</strong
        >) th·ª±c s·ª± giao ti·∫øp v·ªõi ƒë·ªëi t∆∞·ª£ng ·ªü xa.
      </p>
      
      <p>
        C√°c tr√¨nh tr·ª£ gi√∫p (helper) l√†m cho Client c√≥ th·ªÉ h√†nh ƒë·ªông nh∆∞ th·ªÉ n√≥ g·ªçi m·ªôt
        ph∆∞∆°ng th·ª©c ·ªü xa, tr√™n m·ªôt ƒë·ªëi t∆∞·ª£ng c·ª•c b·ªô (th·ª±c t·∫ø l√† nh∆∞ v·∫≠y). Client g·ªçi
        m·ªôt ph∆∞∆°ng th·ª©c tr√™n client helper, nh∆∞ th·ªÉ client helper l√† d·ªãch v·ª• th·ª±c.
        <strong>Client helper</strong> sau ƒë√≥ s·∫Ω ƒë·∫£m nhi·ªám vi·ªác chuy·ªÉn ti·∫øp y√™u c·∫ßu ƒë√≥
        gi√∫p ch√∫ng ta.
      </p>
      <p>
        N√≥i c√°ch kh√°c, ƒë·ªëi t∆∞·ª£ng client nghƒ© r·∫±ng n√≥ g·ªçi m·ªôt ph∆∞∆°ng th·ª©c tr√™n d·ªãch v·ª•
        t·ª´ xa, b·ªüi v√¨ client helper ƒëang gi·∫£ v·ªù l√† ƒë·ªëi t∆∞·ª£ng d·ªãch v·ª•. Gi·∫£ v·ªù tr·ªü th√†nh
        th·ª© c√≥ ph∆∞∆°ng th·ª©c m√† client mu·ªën g·ªçi.
      </p>
      
      <p>
        Nh∆∞ng <strong>client helper </strong>kh√¥ng th·ª±c s·ª± l√†
        <strong>d·ªãch v·ª• t·ª´ xa</strong>. M·∫∑c d√π client helper ho·∫°t ƒë·ªông nh∆∞ v·∫≠y (v√¨ n√≥
        c√≥ c√πng ph∆∞∆°ng th·ª©c m√† d·ªãch v·ª• t·ª´ xa), nh∆∞ng client helper kh√¥ng c√≥ b·∫•t k·ª≥
        logic th·ª±c t·∫ø n√†o m√† Client ƒëang mong ƒë·ª£i. Thay v√†o ƒë√≥, client helper li√™n l·∫°c
        v·ªõi m√°y ch·ªß, chuy·ªÉn th√¥ng tin v·ªÅ l·ªánh g·ªçi ph∆∞∆°ng th·ª©c (v√≠ d·ª•: t√™n c·ªßa ph∆∞∆°ng
        th·ª©c, ƒë·ªëi s·ªë, v.v.) v√† ch·ªù return t·ª´ m√°y ch·ªß.
      </p>
      
      <p>
        V·ªÅ ph√≠a m√°y ch·ªß, tr√¨nh tr·ª£ gi√∫p d·ªãch v·ª• (<strong>service helper</strong>) nh·∫≠n
        y√™u c·∫ßu t·ª´ <strong>client helper</strong> (th√¥ng qua k·∫øt n·ªëi Socket), gi·∫£i n√©n
        th√¥ng tin v·ªÅ cu·ªôc g·ªçi v√† sau ƒë√≥ g·ªçi ph∆∞∆°ng th·ª©c th·ª±c tr√™n ƒë·ªëi t∆∞·ª£ng d·ªãch v·ª•
        th·ª±c. V√¨ v·∫≠y, ƒë·ªëi t∆∞·ª£ng d·ªãch v·ª•, cu·ªôc g·ªçi l√† c·ª•c b·ªô. N√≥ ƒë·∫øn t·ª´ ng∆∞·ªùi tr·ª£ gi√∫p
        d·ªãch v·ª• (service helper), kh√¥ng ph·∫£i kh√°ch h√†ng ·ªü xa (remote client). (Note:
        Ch∆∞a hi·ªÉu th√¨ c√≥ th·ªÉ xem h√¨nh d∆∞·ªõi v√† ƒë·ªçc l·∫°i ƒëo·∫°n n√†y.)
      </p>
      
      <p>
        <strong>Service helper</strong> nh·∫≠n gi√° tr·ªã tr·∫£ v·ªÅ t·ª´ service, ƒë√≥ng g√≥i v√†
        g·ª≠i l·∫°i (qua Socket output stream) cho <strong>client helper</strong>. Client
        helper gi·∫£i n√©n th√¥ng tin v√† tr·∫£ v·ªÅ gi√° tr·ªã cho client object.
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_11.jpg`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p><strong>C√°ch g·ªçi ph∆∞∆°ng th·ª©c x·∫£y ra</strong></p>

        <ol>
          <li>
            Client object g·ªçi t·ªõi ph∆∞∆°ng th·ª©c <strong>doBigThing()</strong> tr√™n client
            helper object.
          </li>
        </ol>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_12.png`),
          width: `60%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        2. <strong>Client helper</strong> g√≥i th√¥ng tin v·ªÅ cu·ªôc g·ªçi (ƒë·ªëi s·ªë, t√™n
        ph∆∞∆°ng th·ª©c, v.v.) v√† g·ª≠i n√≥ qua m·∫°ng cho <strong>Service helper</strong>.
      </p>
      `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_13.png`),
          width: `60%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        3. <strong>Service helper</strong> gi·∫£i n√©n th√¥ng tin t·ª´
        <strong>Client helper</strong>, t√¨m ra ph∆∞∆°ng th·ª©c n√†o ƒë·ªÉ g·ªçi (v√† tr√™n ƒë·ªëi
        t∆∞·ª£ng n√†o) v√† g·ªçi ph∆∞∆°ng th·ª©c th·ª±c (real method) tr√™n ƒë·ªëi t∆∞·ª£ng real service.
      </p>
      `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_14.png`),
          width: `60%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        4. Ph∆∞∆°ng th·ª©c ƒë∆∞·ª£c g·ªçi tr√™n service object, tr·∫£ v·ªÅ m·ªôt s·ªë k·∫øt qu·∫£ cho service
        helper.
      </p>
      `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_15.png`),
          width: `60%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        5. Service helper ƒë√≥ng g√≥i th√¥ng tin tr·∫£ v·ªÅ t·ª´ cu·ªôc g·ªçi v√† g·ª≠i l·∫°i qua m·∫°ng
        cho client helper.
      </p>
      `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_16.png`),
          width: `60%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        6. <strong>Client helper</strong> gi·∫£i n√©n c√°c gi√° tr·ªã ƒë∆∞·ª£c tr·∫£ v·ªÅ v√† tr·∫£
        ch√∫ng v·ªÅ client object. ƒê·ªëi v·ªõi client object
        (<strong>MonitorMachine</strong>), t·∫•t c·∫£ ƒë·ªÅu trong su·ªët (transparent ‚Äì √Ω ƒëo·∫°n
        n√†y l√† MonitorMachine s·∫Ω kh√¥ng c·∫ßn bi·∫øt s·ª± hi·ªán di·ªán c·ªßa ƒë·ªëi t∆∞·ª£ng ·ªü xa, hay
        ƒë·ªëi t∆∞·ª£ng ·ªü xa s·∫Ω trong su·ªët tr∆∞·ªõc <strong>MonitorMachine</strong>).
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_17.png`),
          width: `60%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `Java RMI, b·ª©c tranh l·ªõn`,
    contents: [
      {
        div: `<p>
        ƒê∆∞·ª£c r·ªìi, b·∫°n ƒë√£ kh√°i ni·ªám v·ªÅ c√°ch th·ª©c ho·∫°t ƒë·ªông c·ªßa c√°c ph∆∞∆°ng th·ª©c t·ª´ xa;
        b√¢y gi·ªù b·∫°n ch·ªâ c·∫ßn hi·ªÉu c√°ch s·ª≠ d·ª•ng RMI ƒë·ªÉ cho ph√©p g·ªçi ph∆∞∆°ng th·ª©c t·ª´ xa.
      </p>
      
      <p>
        Nh·ªØng g√¨ RMI l√†m cho b·∫°n l√† x√¢y d·ª±ng c√°c ƒë·ªëi t∆∞·ª£ng client helper v√† service
        helper, ngay l·∫≠p t·ª©c ƒë·ªÉ t·∫°o m·ªôt ƒë·ªëi t∆∞·ª£ng client helper v·ªõi c√°c ph∆∞∆°ng th·ª©c
        t∆∞∆°ng t·ª± nh∆∞ remote service (service helper). ƒêi·ªÅu th√∫ v·ªã v·ªÅ RMI l√† b·∫°n kh√¥ng
        ph·∫£i t·ª± vi·∫øt b·∫•t k·ª≥ ƒëo·∫°n code network ho·∫∑c code I/O n√†o. V·ªõi client c·ªßa b·∫°n,
        b·∫°n g·ªçi c√°c ph∆∞∆°ng th·ª©c t·ª´ xa (t·ª©c l√†, c√°c ph∆∞∆°ng th·ª©c m√† Real Service c√≥)
        gi·ªëng nh∆∞ c√°c cu·ªôc g·ªçi ph∆∞∆°ng th·ª©c th√¥ng th∆∞·ªùng tr√™n c√°c ƒë·ªëi t∆∞·ª£ng ƒëang ch·∫°y
        trong JVM c·ªßa Client.
      </p>
      <p>
        RMI c≈©ng cung c·∫•p t·∫•t c·∫£ c√°c c∆° s·ªü h·∫° t·∫ßng trong runtime ƒë·ªÉ l√†m cho t·∫•t c·∫£
        c√¥ng vi·ªác, bao g·ªìm c·∫£ d·ªãch v·ª• tra c·ª©u m√† kh√°ch h√†ng c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë·ªÉ t√¨m v√†
        truy c·∫≠p c√°c ƒë·ªëi t∆∞·ª£ng t·ª´ xa.
      </p>
      
      <p>
        C√≥ m·ªôt s·ª± kh√°c bi·ªát gi·ªØa c√°c cu·ªôc g·ªçi RMI v√† c√°c cu·ªôc g·ªçi ph∆∞∆°ng th·ª©c c·ª•c b·ªô.
        H√£y nh·ªõ r·∫±ng m·∫∑c d√π v·ªõi m√°y kh√°ch, c√≥ v·∫ª nh∆∞ cu·ªôc g·ªçi ph∆∞∆°ng th·ª©c l√† c·ª•c b·ªô,
        client helper s·∫Ω g·ª≠i cu·ªôc g·ªçi ph∆∞∆°ng th·ª©c qua m·∫°ng. V√¨ v·∫≠y, c√≥ m·∫°ng v√† I/O. V√†
        ch√∫ng ta bi·∫øt g√¨ v·ªÅ c√°c ph∆∞∆°ng th·ª©c k·∫øt n·ªëi m·∫°ng v√† I/O?
      </p>
      
      <p>
        Ch√∫ng r·∫•t m·∫°o hi·ªÉm! Ch√∫ng c√≥ th·ªÉ th·∫•t b·∫°i! V√† v√¨ v·∫≠y, ch√∫ng n√©m exception kh·∫Øp
        n∆°i. K·∫øt qu·∫£ l√†, client ph·∫£i ch·∫•p nh·∫≠n r·ªßi ro. Ch√∫ng ta s·∫Ω xem l√†m th·∫ø n√†o
        trong m·ªôt v√†i trang ti·∫øp.
      </p>
      
      <p>
        <strong
          >T√™n g·ªçi trong RMI: trong RMI, client helper l√† m·ªôt ‚Äústub‚Äù v√† service helper
          l√† m·ªôt ‚Äúskeleton‚Äù.</strong
        >
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_18.png`),
          width: `70%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        <strong
          >B√¢y gi·ªù, h√£y xem qua t·∫•t c·∫£ c√°c b∆∞·ªõc c·∫ßn thi·∫øt ƒë·ªÉ bi·∫øn m·ªôt ƒë·ªëi t∆∞·ª£ng th√†nh
          m·ªôt service c√≥ th·ªÉ ch·∫•p nh·∫≠n c√°c cu·ªôc g·ªçi t·ª´ xa v√† c·∫£ c√°c b∆∞·ªõc c·∫ßn thi·∫øt ƒë·ªÉ
          cho ph√©p Client th·ª±c hi·ªán c√°c cu·ªôc g·ªçi t·ª´ xa.</strong
        >
      </p>
      
      <p>
        <strong
          >B·∫°n c√≥ th·ªÉ mu·ªën ƒë·∫£m b·∫£o d√¢y an to√†n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c th·∫Øt ch·∫∑t; c√≥ r·∫•t nhi·ªÅu
          b∆∞·ªõc v√† m·ªôt v√†i va ch·∫°m v√† ƒë∆∞·ªùng cong ‚Äì nh∆∞ng kh√¥ng c√≥ g√¨ ph·∫£i qu√° lo
          l·∫Øng.</strong
        >
      </p>`,
      },
    ],
  },
  {
    title: `T·∫°o Remote service`,
    contents: [
      {
        div: `<p>
        ƒê√¢y l√† t·ªïng quan v·ªÅ c√°c b∆∞·ªõc ƒë·ªÉ t·∫°o d·ªãch v·ª• t·ª´ xa (remote service). N√≥i c√°ch
        kh√°c, c√°c b∆∞·ªõc c·∫ßn thi·∫øt ƒë·ªÉ l·∫•y m·ªôt ƒë·ªëi t∆∞·ª£ng b√¨nh th∆∞·ªùng v√† si√™u n·∫°p
        (supercharge) n√≥ ƒë·ªÉ n√≥ c√≥ th·ªÉ ƒë∆∞·ª£c g·ªçi b·ªüi m·ªôt remote client. Ch√∫ng ta s·∫Ω l√†m
        ƒëi·ªÅu n√†y sau ƒë√≥ v·ªõi <strong>GumballMachine</strong>. B√¢y gi·ªù, h√£y xem ti·∫øp v√†
        sau ƒë√≥ ch√∫ng t√¥i s·∫Ω gi·∫£i th√≠ch chi ti·∫øt.
      </p>`,
      },
      {
        p: `<h6><b>B∆Ø·ªöC M·ªòT: T·∫†O M·ªòT REMOTE INTERFACE  </b></h6>`,
      },
      {
        div: `<p>
        Remote interface x√°c ƒë·ªãnh c√°c ph∆∞∆°ng th·ª©c m√† client c√≥ th·ªÉ g·ªçi t·ª´ xa. N√≥ c√≥
        nh·ªØng g√¨ m√† client s·∫Ω s·ª≠ d·ª•ng l√†m lo·∫°i l·ªõp cho service c·ªßa b·∫°n. C·∫£ Stub v√†
        service th·ª±c t·∫ø s·∫Ω implement interface n√†y!
      </p>
      `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_19.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        p: `<h6><b>B∆Ø·ªöC HAI: T·∫†O M·ªòT REMOTE IMPLEMENTATION</b></h6>`,
      },
      {
        div: `<p>
        ƒê√¢y l√† l·ªõp th·ª±c s·ª± l√†m vi·ªác. N√≥ c√≥ tri·ªÉn khai th·ª±c s·ª± c·ªßa c√°c remote method
        ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a trong remote interface. N√≥ y√™u c·∫ßu ƒë·ªëi t∆∞·ª£ng m√† Client mu·ªën
        g·ªçi c√°c ph∆∞∆°ng th·ª©c tr√™n (v√≠ d·ª•: GumballMachine c·ªßa ch√∫ng ta!).
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_20.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        p: `<h6><b>B∆Ø·ªöC BA: T·∫†O ‚ÄúSTUB‚Äù V√Ä ‚ÄúSKELETON‚Äù S·ª¨ D·ª§NG RMIC  </b></h6>`,
      },
      {
        div: `<p>
        ƒê√¢y l√† client v√† server ‚Äúhelpers‚Äù. B·∫°n kh√¥ng c·∫ßn ph·∫£i t·∫°o c√°c l·ªõp n√†y ho·∫∑c xem
        source code t·∫°o ra ch√∫ng. T·∫•t c·∫£ ƒë·ªÅu x·ª≠ l√Ω t·ª± ƒë·ªông khi b·∫°n ch·∫°y c√¥ng c·ª• rmic
        ƒëi k√®m v·ªõi b·ªô c√¥ng c·ª• ph√°t tri·ªÉn Java (JDK) c·ªßa b·∫°n.
      </p>
      `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_21.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        p: `<h6><b>B∆Ø·ªöC B·ªêN: RUN RMIREGISTRY (RMIREGISTRY)  </b></h6>`,
      },
      {
        div: `<p>
        C√°c rmiregology gi·ªëng nh∆∞ c√°c trang tr·∫Øng (white pages) c·ªßa m·ªôt danh b·∫° ƒëi·ªán
        tho·∫°i. N√≥ ·ªü n∆°i Client ƒëi l·∫•y proxy (client stub/helper object).
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_22.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        p: `<h6><b>B∆Ø·ªöC NƒÇM: B·∫ÆT ƒê·∫¶U REMOTE SERVICE  </b></h6>`,
      },
      {
        div: `<p>
        B·∫°n ph·∫£i ƒë∆∞a ƒë·ªëi t∆∞·ª£ng d·ªãch v·ª• l√™n v√† ch·∫°y. L·ªõp tri·ªÉn khai d·ªãch v·ª• c·ªßa b·∫°n
        kh·ªüi t·∫°o m·ªôt th·ªÉ hi·ªán c·ªßa d·ªãch v·ª• v√† ƒëƒÉng k√Ω n√≥ v·ªõi RMI registry. ƒêƒÉng k√Ω n√≥
        l√†m cho d·ªãch v·ª• c√≥ s·∫µn cho kh√°ch h√†ng.
      </p>
      `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_23.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `B∆∞·ªõc m·ªôt: T·∫°o m·ªôt Remote Interface  `,
    contents: [
      {
        div: `<p><strong>1. Extend java.rmi.Remote&nbsp;&nbsp;</strong></p>

        <p>
          Remote l√† m·ªôt ‚Äòmarker‚Äô interface, c√≥ nghƒ©a l√† n√≥ kh√¥ng c√≥ ph∆∞∆°ng th·ª©c. Tuy
          nhi√™n, n√≥ c√≥ √Ω nghƒ©a ƒë·∫∑c bi·ªát ƒë·ªëi v·ªõi RMI, v√¨ v·∫≠y b·∫°n ph·∫£i tu√¢n theo quy t·∫Øc
          n√†y. L∆∞u √Ω r·∫±ng ch√∫ng t√¥i n√≥i ‚Äòextends‚Äô ·ªü ƒë√¢y. M·ªôt giao di·ªán ƒë∆∞·ª£c ph√©p m·ªü r·ªông
          giao di·ªán kh√°c.
        </p>
        `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_24.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p><strong>2. M√¥ t·∫£ t·∫•t c·∫£ ph∆∞∆°ng th·ª©c n√©m ra m·ªôt RemoteException</strong></p>

        <p>
          Remote interface l√† giao di·ªán m√† Client s·ª≠ d·ª•ng nh∆∞ l√† m·ªôt lo·∫°i cho service.
          N√≥i c√°ch kh√°c, Client g·ªçi c√°c ph∆∞∆°ng th·ª©c tr√™n m·ªôt c√°i g√¨ ƒë√≥ ‚Äì th·ª© s·∫Ω
          implement remote interface. T·∫•t nhi√™n, c√°i g√¨ ƒë√≥ l√† stub, v√† v√¨ stub ƒëang k·∫øt
          n·ªëi m·∫°ng v√† I/O, t·∫•t c·∫£ c√°c lo·∫°i ‚Äúƒêi·ªÅu x·∫•u‚Äù ƒë·ªÅu c√≥ th·ªÉ x·∫£y ra. Client ph·∫£i
          th·ª´a nh·∫≠n r·ªßi ro b·∫±ng c√°ch x·ª≠ l√Ω ho·∫∑c khai b√°o c√°c exception t·ª´ xa. N·∫øu c√°c
          ph∆∞∆°ng th·ª©c trong Interface khai b√°o c√°c exception, b·∫•t k·ª≥ ph∆∞∆°ng th·ª©c g·ªçi
          code n√†o tr√™n tham chi·∫øu c·ªßa lo·∫°i ƒë√≥ (lo·∫°i interface) c≈©ng ph·∫£i x·ª≠ l√Ω ho·∫∑c
          khai b√°o c√°c exception.
        </p>
        `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_25.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        M·ªói cu·ªôc g·ªçi ph∆∞∆°ng th·ª©c t·ª´ xa ƒë∆∞·ª£c coi l√† ‚Äúr·ªßi ro‚Äù. Khai b√°o
        <strong>RemoteException </strong>tr√™n m·ªçi ph∆∞∆°ng th·ª©c bu·ªôc client ph·∫£i ch√∫ √Ω
        v√† th·ª´a nh·∫≠n r·∫±ng m·ªçi th·ª© c√≥ th·ªÉ kh√¥ng ho·∫°t ƒë·ªông.
      </p>
      
      <p>
        <strong
          >3. H√£y ch·∫Øc ch·∫Øn c√°c ƒë·ªëi s·ªë v√† gi√° tr·ªã tr·∫£ v·ªÅ l√† primitive (ki·ªÉu nguy√™n
          th·ªßy: int, float,double‚Ä¶) ho·∫∑c Serializable</strong
        >
      </p>
      
      <p>
        C√°c ƒë·ªëi s·ªë v√† gi√° tr·ªã tr·∫£ v·ªÅ c·ªßa m·ªôt remote method ph·∫£i l√† ho·∫∑c primitive ho·∫∑c
        Serializable. H√£y suy nghƒ© v·ªÅ n√≥. B·∫•t k·ª≥ ƒë·ªëi s·ªë n√†o ƒë·ªëi v·ªõi m·ªôt remote method
        ƒë·ªÅu ph·∫£i ƒë∆∞·ª£c ƒë√≥ng g√≥i v√† v·∫≠n chuy·ªÉn qua m·∫°ng v√† ƒëi·ªÅu ƒë√≥ ƒë∆∞·ª£c th·ª±c hi·ªán th√¥ng
        qua <strong>Serialization</strong>. C≈©ng t∆∞∆°ng t·ª± v·ªõi gi√° tr·ªã tr·∫£ v·ªÅ. N·∫øu b·∫°n
        s·ª≠ d·ª•ng primitives, Strings v√† ph·∫ßn l·ªõn c√°c lo·∫°i trong API (bao g·ªìm c·∫£ arrays
        v√† collection), b·∫°n s·∫Ω v·∫´n ·ªïn.
      </p>
      
      <p>
        N·∫øu b·∫°n ƒëang chuy·ªÉn qua c√°c ki·ªÉu c·ªßa ri√™ng m√¨nh, ch·ªâ c·∫ßn ch·∫Øc ch·∫Øn r·∫±ng c√°c
        l·ªõp c·ªßa b·∫°n implement <strong>Serializable</strong>.
      </p>
      
      <p>
        (H√£y xem <strong>Head First Java</strong> n·∫øu b·∫°n c·∫ßn nh·ªõ l·∫°i ki·∫øn th·ª©c c·ªßa
        m√¨nh v·ªÅ <strong>serializable</strong>)
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_26.png`),
          width: `50%`,
          align: `left`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        Gi√° tr·ªã tr·∫£ v·ªÅ n√†y s·∫Ω ƒë∆∞·ª£c chuy·ªÉn qua m·∫°ng t·ª´ server tr·ªü l·∫°i client, v√¨ v·∫≠y n√≥
        c≈©ng ph·∫£i ƒë∆∞·ª£c <strong>Serializable</strong>. ƒê√≥ l√† c√°ch th·ª©c args v√† return
        values ƒë∆∞·ª£c ƒë√≥ng g√≥i v√† g·ª≠i ƒëi.
      </p>`,
      },
    ],
  },
  {
    title: `B∆∞·ªõc hai: T·∫°o m·ªôt Remote Implementation`,
    contents: [
      {
        div: `<p><strong>1. Implement the Remote interface&nbsp;&nbsp;</strong></p>

        <p>
          D·ªãch v·ª• c·ªßa b·∫°n ph·∫£i implement remote interface, m·ªôt trong nh·ªØng ph∆∞∆°ng th·ª©c
          m√† client c·ªßa b·∫°n s·∫Ω g·ªçi.
        </p>
        `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_27.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p><strong>2. Extend UnicastRemoteObject&nbsp;&nbsp;</strong></p>

        <p>
          ƒê·ªÉ l√†m vi·ªác nh∆∞ m·ªôt ƒë·ªëi t∆∞·ª£ng remote service, ƒë·ªëi t∆∞·ª£ng c·ªßa b·∫°n c·∫ßn m·ªôt s·ªë
          ch·ª©c nƒÉng li√™n quan ƒë·∫øn ‚Äòbeing remote‚Äô. C√°ch ƒë∆°n gi·∫£n nh·∫•t l√† extend
          &nbsp;UnicastRemoteObject (t·ª´ g√≥i <strong><em>java.rmi.server</em></strong
          >) v√† ƒë·ªÉ l·ªõp ƒë√≥ (superclass c·ªßa b·∫°n) th·ª±c hi·ªán c√¥ng vi·ªác cho b·∫°n.
        </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_28.png`),
          width: `70%`,
          align: `left`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        <strong
          >3. Vi·∫øt m·ªôt h√†m kh·ªüi t·∫°o kh√¥ng c√≥ ƒë·ªëi s·ªë m√¥ t·∫£ RemoteException</strong
        >
      </p>
      
      <p>
        Superclass m·ªõi c·ªßa b·∫°n, <strong>UnicastRemoteObject</strong>, c√≥ m·ªôt v·∫•n ƒë·ªÅ
        nh·ªè, constructor c·ªßa n√≥ n√©m ra <strong>RemoteException</strong>. C√°ch duy nh·∫•t
        ƒë·ªÉ gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ n√†y l√† khai b√°o constructor cho vi·ªác tri·ªÉn khai t·ª´ xa c·ªßa
        b·∫°n, ƒë·ªÉ b·∫°n c√≥ m·ªôt n∆°i ƒë·ªÉ khai b√°o <strong>RemoteException</strong>. H√£y nh·ªõ
        r·∫±ng, khi m·ªôt l·ªõp ƒë∆∞·ª£c kh·ªüi t·∫°o, superclass constructor c·ªßa n√≥ lu√¥n ƒë∆∞·ª£c g·ªçi.
        N·∫øu h√†m t·∫°o c·ªßa l·ªõp cha c·ªßa b·∫°n quƒÉng ra m·ªôt ngo·∫°i l·ªá, b·∫°n kh√¥ng c√≥ l·ª±a ch·ªçn
        n√†o kh√°c ngo√†i vi·ªác khai b√°o r·∫±ng constructor c·ªßa b·∫°n c≈©ng n√©m m·ªôt ngo·∫°i l·ªá.
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_29.png`),
          width: `50%`,
          align: `left`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        B·∫°n kh√¥ng ph·∫£i ƒë·∫∑t b·∫•t c·ª© th·ª© g√¨ v√†o h√†m kh·ªüi t·∫°o. B·∫°n ch·ªâ c·∫ßn m·ªôt c√°ch ƒë·ªÉ
        khai b√°o r·∫±ng h√†m constructor c·ªßa si√™u l·ªõp c·ªßa b·∫°n n√©m m·ªôt ngo·∫°i l·ªá.
      </p>
      
      <p><strong>4. ƒêƒÉng k√Ω d·ªãch v·ª• v·ªõi RMI registry</strong></p>
      
      <p>
        B√¢y gi·ªù b·∫°n ƒë√£ c√≥ m·ªôt d·ªãch v·ª• t·ª´ xa, b·∫°n ph·∫£i cung c·∫•p n√≥ cho c√°c remote
        client. B·∫°n l√†m ƒëi·ªÅu n√†y b·∫±ng c√°ch kh·ªüi t·∫°o n√≥ v√† ƒë∆∞a n√≥ v√†o RMI registry
        (ph·∫£i th·ª±c hi·ªán ƒëi·ªÅu n√†y ho·∫∑c code c·ªßa b·∫°n b·ªã l·ªói). Khi b·∫°n ƒëƒÉng k√Ω ƒë·ªëi t∆∞·ª£ng
        implementation, h·ªá th·ªëng RMI th·ª±c s·ª± ƒë·∫∑t stub trong registry, v√¨ ƒë√≥ l√† nh·ªØng
        g√¨ client th·ª±c s·ª± c·∫ßn. ƒêƒÉng k√Ω d·ªãch v·ª• c·ªßa b·∫°n b·∫±ng ph∆∞∆°ng th·ª©c static
        <strong>rebind()</strong> c·ªßa l·ªõp <strong>java.rmi.Naming</strong>.
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_30.png`),
          width: `50%`,
          align: `left`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        ƒê·∫∑t t√™n cho d·ªãch v·ª• c·ªßa b·∫°n (th·ª© m√† client c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë·ªÉ tra c·ª©u n√≥ trong
        registry) v√† ƒëƒÉng k√Ω n√≥ v·ªõi RMI registry. Khi b·∫°n li√™n k·∫øt (bind) ƒë·ªëi t∆∞·ª£ng
        d·ªãch v·ª• (service object), RMI ho√°n ƒë·ªïi d·ªãch v·ª• cho stub v√† ƒë·∫∑t stub trong
        registry.
      </p>`,
      },
    ],
  },
  {
    title: `B∆∞·ªõc ba: T·∫°o ‚Äústub‚Äù v√† ‚Äúskeleton‚Äù s·ª≠ d·ª•ng rmic`,
    contents: [
      {
        div: `<p>
        <strong
          >1. Ch·∫°y rmic tr√™n l·ªõp remote implementation class (kh√¥ng ph·∫£i remote
          interface)</strong
        >
      </p>
      
      <p>
        C√¥ng c·ª• rmic, ƒëi k√®m v·ªõi b·ªô c√¥ng c·ª• ph√°t tri·ªÉn ph·∫ßn m·ªÅm Java (JDK), l·∫•y
        service implementation v√† t·∫°o hai l·ªõp m·ªõi, stub v√† skeleton. N√≥ s·ª≠ d·ª•ng quy
        ∆∞·ªõc ƒë·∫∑t t√™n l√† t√™n c·ªßa vi·ªác tri·ªÉn khai t·ª´ xa c·ªßa b·∫°n + ‚Äú_Stub‚Äù ho·∫∑c ‚Äú_Skel‚Äù
        ƒë∆∞·ª£c th√™m v√†o cu·ªëi. C√≥ c√°c t√πy ch·ªçn kh√°c v·ªõi rmic, bao g·ªìm kh√¥ng t·∫°o
        skeletons, xem source code c·ªßa c√°c l·ªõp n√†y tr√¥ng nh∆∞ th·∫ø n√†o v√† th·∫≠m ch√≠ s·ª≠
        d·ª•ng IIOP l√†m giao th·ª©c (protocol). C√°ch ch√∫ng t√¥i ƒëang l√†m ·ªü ƒë√¢y l√† c√°ch m√†
        b·∫°n s·∫Ω th∆∞·ªùng l√†m. C√°c l·ªõp s·∫Ω ƒë·∫∑t trong th∆∞ m·ª•c hi·ªán t·∫°i (t·ª©c l√† b·∫°n s·∫Ω ph·∫£i
        <strong>cd</strong> t·ªõi c√°c l·ªõp). H√£y nh·ªõ r·∫±ng, rmic ph·∫£i nh√¨n th·∫•y l·ªõp tri·ªÉn
        khai c·ªßa b·∫°n, v√¨ v·∫≠y b·∫°n c√≥ th·ªÉ ch·∫°y rmic t·ª´ th∆∞ m·ª•c n∆°i tri·ªÉn khai t·ª´ xa c·ªßa
        b·∫°n. (Ch√∫ng t√¥i c·ªë t√¨nh kh√¥ng s·ª≠ d·ª•ng c√°c packages ·ªü ƒë√¢y, ƒë·ªÉ l√†m cho n√≥ ƒë∆°n
        gi·∫£n h∆°n. Trong th·∫ø gi·ªõi th·ª±c, b·∫°n s·∫Ω c·∫ßn t√≠nh ƒë·∫øn c√°c c·∫•u tr√∫c th∆∞ m·ª•c
        packages v√† t√™n ƒë·ªß ƒëi·ªÅu ki·ªán).
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_31.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `B∆∞·ªõc b·ªën: run rmiregistry (rmiregistry)  `,
    contents: [
      {
        div: `<p><strong>1. M·ªü terminal v√† b·∫Øt ƒë·∫ßu rmiregistry.&nbsp;&nbsp;</strong></p>

        <p>
          H√£y ch·∫Øc ch·∫Øn r·∫±ng b·∫°n b·∫Øt ƒë·∫ßu n√≥ t·ª´ m·ªôt th∆∞ m·ª•c c√≥ quy·ªÅn truy c·∫≠p v√†o c√°c l·ªõp
          c·ªßa b·∫°n. C√°ch ƒë∆°n gi·∫£n nh·∫•t l√† kh·ªüi ƒë·ªông n√≥ t·ª´ th∆∞ m·ª•c ‚Äòclasses‚Äô.
        </p>
        `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_32.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `B∆∞·ªõc nƒÉm: B·∫Øt ƒë·∫ßu service`,
    contents: [
      {
        div: `<p><strong>1. ƒê∆∞a l√™n m·ªôt terminal kh√°c v√† b·∫Øt ƒë·∫ßu service c·ªßa b·∫°n</strong></p>

        <p>
          ƒêi·ªÅu n√†y c√≥ th·ªÉ l√† t·ª´ m·ªôt ph∆∞∆°ng th·ª©c <strong>main() </strong>trong remote
          implementation class c·ªßa b·∫°n ho·∫∑c t·ª´ m·ªôt l·ªõp launcher ri√™ng bi·ªát.
        </p>
        
        <p>
          Trong v√≠ d·ª• ƒë∆°n gi·∫£n n√†y, ch√∫ng t√¥i ƒë·∫∑t code kh·ªüi ƒë·ªông (starter code) trong
          l·ªõp tri·ªÉn khai, trong m·ªôt ph∆∞∆°ng th·ª©c <strong>main </strong>ƒë·ªÉ kh·ªüi t·∫°o ƒë·ªëi
          t∆∞·ª£ng v√† ƒëƒÉng k√Ω n√≥ v·ªõi RMI registry.
        </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_33.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `Ho√†n th√†nh code cho server side  `,
    contents: [
      {
        div: `<p><strong>Remote interface:&nbsp;&nbsp;</strong></p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_34.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p><strong>Remote service (implementation):&nbsp;&nbsp;</strong></p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_35.png`),
          width: `80%`,
          align: `center`,
        },
      },

      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `L√†m th·∫ø n√†o ƒë·ªÉ client c√≥ ƒë∆∞·ª£c stub object?`,
    contents: [
      {
        div: `<p>
        Client ph·∫£i l·∫•y stub object (proxy c·ªßa ch√∫ng ta), v√¨ ƒë√≥ l√† ƒëi·ªÅu m√† client s·∫Ω
        g·ªçi c√°c ph∆∞∆°ng th·ª©c tr√™n. V√† ƒë√≥ l√† n∆°i m√† RMI registry xu·∫•t hi·ªán. Client th·ª±c
        hi·ªán tra c·ª©u, gi·ªëng nh∆∞ ƒëi ƒë·∫øn c√°c trang tr·∫Øng c·ªßa m·ªôt danh b·∫° ƒëi·ªán tho·∫°i, v√†
        v·ªÅ c∆° b·∫£n, ƒê√¢y l√† tra c·ª©u m·ªôt c√°i t√™n, v√† stub s·∫Ω g·∫Øn li·ªÅn v·ªõi c√°i t√™n ƒë√≥.
      </p>
      
      <p>
        Ch√∫ng ta h√£y xem code ch√∫ng ta c·∫ßn lookup v√† truy xu·∫•t m·ªôt ƒë·ªëi t∆∞·ª£ng stub.
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_36.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_37.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        p: `<h6><b>C√ÅCH N√ì L√ÄM VI·ªÜC</b></h6>`,
      },
      {
        div: `<p>1. Client th·ª±c hi·ªán tra c·ª©u tr√™n s·ªï RMI registry&nbsp;&nbsp;</p>`,
      },
      {
        code: {
          src: `Naming.lookup("rmi://127.0.0.1/RemoteHello");`,
          language: 'java',
        },
      },
      {
        div: `<p>2. RMI registry return m·ªôt stub object&nbsp;&nbsp;</p>

        <p>
          (nh∆∞ gi√° tr·ªã tr·∫£ v·ªÅ c·ªßa ph∆∞∆°ng th·ª©c lookup) v√† RMI t·ª± ƒë·ªông deserializes stub.
          B·∫°n PH·∫¢I c√≥ l·ªõp stub (rmic t·∫°o cho b·∫°n) tr√™n client ng∆∞·ª£c l·∫°i stub s·∫Ω kh√¥ng
          ƒë∆∞·ª£c deserialized.
        </p>
        
        <p>3. Client g·ªçi m·ªôt ph∆∞∆°ng th·ª©c tr√™n stub, nh∆∞ th·ªÉ stub ƒë√≥ l√† real service.</p>`,
      },
      {
        p: `<h6><b>HO√ÄN TH√ÄNH CLIENT CODE </b></h6>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_38.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `L√†m th·∫ø n√†o ƒë·ªÉ client c√≥ ƒë∆∞·ª£c stub class?`,
    contents: [
      {
        div: `
        <p>
          B√¢y gi·ªù ch√∫ng ta ƒë·∫øn v·ªõi m·ªôt c√¢u h·ªèi th√∫ v·ªã. L√†m th·∫ø n√†o, hay b·∫±ng c√°ch n√†o
          ƒë√≥, client ph·∫£i c√≥ stub class (th·ª© b·∫°n ƒë√£ t·∫°o tr∆∞·ªõc ƒë√≥ b·∫±ng c√°ch s·ª≠ d·ª•ng rmic)
          t·∫°i th·ªùi ƒëi·ªÉm client th·ª±c hi·ªán lookup, n·∫øu kh√¥ng th√¨ stub s·∫Ω kh√¥ng ƒë∆∞·ª£c
          deserialized tr√™n client v√† m·ªçi th·ª© ti·∫øp theo s·∫Ω kh√¥ng ƒë∆∞·ª£c th·ª±c hi·ªán. Client
          c≈©ng c·∫ßn c√°c l·ªõp cho b·∫•t k·ª≥ serialized object n√†o ƒë∆∞·ª£c tr·∫£ v·ªÅ b·ªüi c√°c ph∆∞∆°ng
          th·ª©c g·ªçi ƒë·∫øn remote object. Trong m·ªôt h·ªá th·ªëng ƒë∆°n gi·∫£n, b·∫°n c√≥ th·ªÉ ch·ªâ c·∫ßn
          cung c·∫•p c√°c l·ªõp n√†y cho client.
        </p>
        
        <p>
          C√≥ m·ªôt c√°ch hay h∆°n nhi·ªÅu, m·∫∑c d√π n√≥ v∆∞·ª£t qu√° ph·∫°m vi c·ªßa cu·ªën s√°ch n√†y. Nh∆∞ng
          trong tr∆∞·ªùng h·ª£p b·∫°n c√≥ h·ª©ng th√∫, c√°ch hay h∆°n ƒë∆∞·ª£c g·ªçi l√† ‚Äúdynamic class
          downloading‚Äù. V·ªõi vi·ªác t·∫£i xu·ªëng ƒë·ªông, c√°c ƒë·ªëi t∆∞·ª£ng ƒë∆∞·ª£c serialized (nh∆∞
          stub) ƒë∆∞·ª£c ƒë√≥ng d·∫•u v·ªõi m·ªôt URL th√¥ng b√°o cho h·ªá th·ªëng RMI tr√™n client ƒë·ªÉ t√¨m
          t·ªáp l·ªõp cho ƒë·ªëi t∆∞·ª£ng ƒë√≥. Sau ƒë√≥, trong qu√° tr√¨nh deserializing m·ªôt ƒë·ªëi t∆∞·ª£ng,
          n·∫øu RMI kh√¥ng th·ªÉ t√¨m th·∫•y l·ªõp c·ª•c b·ªô, n√≥ s·∫Ω s·ª≠ d·ª•ng URL ƒë√≥ ƒë·ªÉ th·ª±c hi·ªán HTTP
          Get ƒë·ªÉ l·∫•y class file. V√¨ v·∫≠y, b·∫°n c√≥ th·ªÉ c·∫ßn m·ªôt m√°y ch·ªß web ƒë∆°n gi·∫£n ƒë·ªÉ ph·ª•c
          v·ª• c√°c class file v√† b·∫°n c≈©ng c·∫ßn thay ƒë·ªïi m·ªôt s·ªë tham s·ªë b·∫£o m·∫≠t tr√™n client.
          C√≥ m·ªôt v√†i v·∫•n ƒë·ªÅ ph·ª©c t·∫°p kh√°c v·ªõi ‚Äúdynamic class downloading‚Äù, nh∆∞ng ƒë√≥ l√†
          t·ªïng quan.
        </p>
        
        <p>
          ƒê·ªëi v·ªõi stub object c·ª• th·ªÉ, c√≥ m·ªôt c√°ch kh√°c ƒë·ªÉ client c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c l·ªõp.
          ƒêi·ªÅu n√†y ch·ªâ c√≥ trong Java 5. Ch√∫ng t√¥i s·∫Ω n√≥i ng·∫Øn g·ªçn v·ªÅ ƒëi·ªÅu n√†y ·ªü g·∫ßn cu·ªëi
          ch∆∞∆°ng.
        </p>`,
      },
    ],
  },
  {
    title: `Ti·∫øp t·ª•c xem`,
    contents: [
      {
        div: `<p>Ba ƒëi·ªÅu h√†ng ƒë·∫ßu m√† c√°c l·∫≠p tr√¨nh vi√™n l√†m sai v·ªõi RMI l√†:</p>

        <p>
          1) Qu√™n start rmiregistry tr∆∞·ªõc khi start remote service (khi service ƒë∆∞·ª£c
          ƒëƒÉng k√Ω <strong>Naming.rebind()</strong>, rmiregistry ph·∫£i ƒë∆∞·ª£c ch·∫°y!)
        </p>
        
        <p>
          2) Qu√™n t·∫°o c√°c ƒë·ªëi s·ªë v√† tr·∫£ v·ªÅ c√°c ki·ªÉu serializable (b·∫°n s·∫Ω kh√¥ng bi·∫øt cho
          ƒë·∫øn khi runtime; tr√¨nh bi√™n d·ªãch s·∫Ω kh√¥ng ph√°t hi·ªán.)
        </p>
        
        <p>3) Qu√™n cung c·∫•p stub class cho client.</p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_39.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `Quay l·∫°i v·ªõi GumballMachine remote proxy c·ªßa ch√∫ng ta`,
    contents: [
      {
        div: `<p>
        ƒê∆∞·ª£c r·ªìi, b√¢y gi·ªù b·∫°n ƒë√£ c√≥ ki·∫øn th·ª©c c∆° b·∫£n v·ªÅ RMI, b·∫°n ƒë√£ c√≥ c√°c c√¥ng c·ª• c·∫ßn
        thi·∫øt ƒë·ªÉ th·ª±c hi·ªán GumballMachine remote proxy. H√£y xem GumballMachine ph√π h·ª£p
        v·ªõi framework n√†y nh∆∞ th·∫ø n√†o:<br />
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_40.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `Chu·∫©n b·ªã GumballMachine tr·ªü th√†nh m·ªôt d·ªãch v·ª• t·ª´ xa`,
    contents: [
      {
        div: `<p>
        B∆∞·ªõc ƒë·∫ßu ti√™n trong vi·ªác chuy·ªÉn ƒë·ªïi code c·ªßa ch√∫ng t√¥i ƒë·ªÉ s·ª≠ d·ª•ng Remote proxy
        l√† cho ph√©p <strong>GumballMachine </strong>ph·ª•c v·ª• c√°c y√™u c·∫ßu t·ª´ xa t·ª´
        client. N√≥i c√°ch kh√°c, ch√∫ng t√¥i s·∫Ω bi·∫øn n√≥ th√†nh m·ªôt d·ªãch v·ª•. ƒê·ªÉ l√†m ƒëi·ªÅu ƒë√≥,
        ch√∫ng ta c·∫ßn ph·∫£i:
      </p>
      
      <p>
        1) T·∫°o giao di·ªán t·ª´ xa cho <strong>GumballMachine</strong>. ƒêi·ªÅu n√†y s·∫Ω cung
        c·∫•p m·ªôt t·∫≠p h·ª£p c√°c ph∆∞∆°ng th·ª©c c√≥ th·ªÉ ƒë∆∞·ª£c g·ªçi t·ª´ xa.
      </p>
      
      <p>
        2) ƒê·∫£m b·∫£o t·∫•t c·∫£ c√°c ki·ªÉu tr·∫£ v·ªÅ trong giao di·ªán ƒë∆∞·ª£c
        <strong>serializable</strong>.
      </p>
      
      <p>
        3) Th·ª±c hi·ªán giao di·ªán trong m·ªôt l·ªõp c·ª• th·ªÉ. Ch√∫ng t√¥i s·∫Ω b·∫Øt ƒë·∫ßu v·ªõi remote
        interface:
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_41.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        Ch√∫ng ta c√≥ m·ªôt ki·ªÉu tr·∫£ v·ªÅ kh√¥ng <strong>Serializable</strong>: l·ªõp
        <strong>State</strong>. H√£y s·ª≠a n√≥ l·∫°i‚Ä¶
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_42.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        Tr√™n th·ª±c t·∫ø, ch√∫ng t√¥i ch∆∞a ho√†n th√†nh ƒë∆∞·ª£c v·ªõi serializable; ch√∫ng t√¥i c√≥
        m·ªôt v·∫•n ƒë·ªÅ v·ªõi <strong>State</strong>. B·∫°n c√≥ th·ªÉ nh·ªõ, m·ªói ƒë·ªëi t∆∞·ª£ng
        <strong>State </strong>c√≥ m·ªôt tham chi·∫øu ƒë·∫øn
        <strong>Gumball machine</strong> ƒë·ªÉ n√≥ c√≥ th·ªÉ g·ªçi ph∆∞∆°ng th·ª©c c·ªßa Gumball
        machine v√† thay ƒë·ªïi tr·∫°ng th√°i c·ªßa n√≥. Ch√∫ng t√¥i kh√¥ng mu·ªën cho to√†n b·ªô
        gumball machine ƒë∆∞·ª£c serialized v√† chuy·ªÉn giao v·ªõi State object. C√≥ m·ªôt c√°ch
        d·ªÖ d√†ng ƒë·ªÉ kh·∫Øc ph·ª•c ƒëi·ªÅu n√†y:
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_43.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        Ch√∫ng t√¥i ƒë√£ tri·ªÉn khai <strong>GumballMachine</strong>, nh∆∞ng ch√∫ng t√¥i c·∫ßn
        ƒë·∫£m b·∫£o r·∫±ng n√≥ c√≥ th·ªÉ ho·∫°t ƒë·ªông nh∆∞ m·ªôt d·ªãch v·ª• v√† x·ª≠ l√Ω c√°c y√™u c·∫ßu ƒë·∫øn t·ª´
        m·∫°ng. ƒê·ªÉ l√†m ƒëi·ªÅu ƒë√≥, ch√∫ng t√¥i ph·∫£i ƒë·∫£m b·∫£o
        <strong>GumballMachine </strong>ƒëang l√†m m·ªçi th·ª© c·∫ßn thi·∫øt ƒë·ªÉ implements giao
        di·ªán <strong>GumballMachineRemote</strong>.
      </p>
      
      <p>
        Nh∆∞ b·∫°n ƒë√£ th·∫•y trong ph·∫ßn ‚Äú<strong>RMI detour</strong>‚Äù, ƒëi·ªÅu n√†y kh√° ƒë∆°n
        gi·∫£n, t·∫•t c·∫£ nh·ªØng g√¨ ch√∫ng ta c·∫ßn l√†m l√† th√™m m·ªôt v√†i th·ª©‚Ä¶
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_44.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `ƒêƒÉng k√Ω v·ªõi RMI registry‚Ä¶`,
    contents: [
      {
        div: `<p>
        ƒêi·ªÅu ƒë√≥ s·∫Ω ho√†n th√†nh gumball machine service. B√¢y gi·ªù ch√∫ng t√¥i ch·ªâ c·∫ßn k√≠ch
        ho·∫°t n√≥ ƒë·ªÉ n√≥ c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu. Tr∆∞·ªõc ti√™n, ch√∫ng t√¥i c·∫ßn ƒë·∫£m b·∫£o r·∫±ng
        ch√∫ng t√¥i ƒëƒÉng k√Ω n√≥ v·ªõi RMI registry ƒë·ªÉ client c√≥ th·ªÉ x√°c ƒë·ªãnh v·ªã tr√≠ c·ªßa n√≥.
      </p>
      
      <p>Ch√∫ng t√¥i s·∫Ω th√™m m·ªôt √≠t code ƒë·ªÉ x·ª≠ l√Ω vi·ªác n√†y:</p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_45.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>H√£y xem k·∫øt qu·∫£:</p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_46.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `B√¢y gi·ªù l√† GumballMonitor client  `,
    contents: [
      {
        div: `<p>
        Nh·ªõ GumballMonitor kh√¥ng? Ch√∫ng t√¥i mu·ªën s·ª≠ d·ª•ng l·∫°i n√≥ m√† kh√¥ng c·∫ßn vi·∫øt l·∫°i
        ƒë·ªÉ ho·∫°t ƒë·ªông qua m·∫°ng. Ch√∫ng t√¥i s·∫Ω l√†m ƒëi·ªÅu ƒë√≥, nh∆∞ng ch√∫ng t√¥i c·∫ßn ph·∫£i th·ª±c
        hi·ªán m·ªôt v√†i thay ƒë·ªïi.
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_47.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_48.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `Vi·∫øt Monitor test drive`,
    contents: [
      {
        div: `<p>
        B√¢y gi·ªù ch√∫ng t√¥i ƒë√£ c√≥ t·∫•t c·∫£ c√°c ph·∫ßn ch√∫ng t√¥i c·∫ßn. Ch√∫ng ta ch·ªâ c·∫ßn vi·∫øt
        m·ªôt s·ªë code ƒë·ªÉ CEO c√≥ th·ªÉ gi√°m s√°t m·ªôt lo·∫°t c√°c m√°y b·∫Øn k·∫πo cao su:
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_49.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_50.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `Demo kh√°c cho CEO c·ªßa Mighty Gumball‚Ä¶`,
    contents: [
      {
        div: `<p>
        ƒê∆∞·ª£c r·ªìi, ƒë√£ ƒë·∫øn l√∫c k·∫øt h·ª£p t·∫•t c·∫£ c√¥ng vi·ªác n√†y l·∫°i v·ªõi nhau v√† ƒë∆∞a ra m·ªôt
        b·∫£n demo kh√°c. Tr∆∞·ªõc ti√™n, h√£y ƒë·ªÉ ch·∫Øc ch·∫Øn r·∫±ng m·ªôt v√†i Gumball machine ƒëang
        ch·∫°y code m·ªõi:
      </p>
      `,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_51.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        V√† b√¢y gi·ªù h√£y ƒë·∫∑t m√†n h√¨nh theo d√µi cho CEO. Hy v·ªçng l·∫ßn n√†y anh ·∫•y s·∫Ω th√≠ch
        n√≥:
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_52.png`),
          width: `60%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        B·∫±ng c√°ch g·ªçi c√°c ph∆∞∆°ng th·ª©c tr√™n proxy, m·ªôt cu·ªôc g·ªçi t·ª´ xa ƒë∆∞·ª£c th·ª±c hi·ªán
        tr√™n m·ªôt bi·∫øn String, m·ªôt s·ªë int v√† m·ªôt State object. B·ªüi v√¨ ch√∫ng t√¥i ƒëang s·ª≠
        d·ª•ng proxy, <strong>GumballMonitor </strong>kh√¥ng bi·∫øt, ho·∫∑c c·∫ßn kh√¥ng quan
        t√¢m, c√°c cu·ªôc g·ªçi ƒë√≥ l√† t·ª´ xa (tr·ª´ vi·ªác ph·∫£i lo l·∫Øng v·ªÅ c√°c exception t·ª´ xa
        ƒë∆∞·ª£c n√©m ra).
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_53.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        1. CEO ch·∫°y m√†n h√¨nh, ƒë·∫ßu ti√™n l·∫•y proxy c·ªßa m√°y b·∫Øn k·∫πo cao su t·ª´ xa v√† sau
        ƒë√≥ g·ªçi <strong>getState()</strong> tr√™n m·ªói m√°y (c√πng v·ªõi
        <strong>getCount()</strong> v√† <strong>getLocation()</strong>).
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_54.png`),
          width: `60%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        2. <strong>getState()</strong> ƒë∆∞·ª£c g·ªçi tr√™n proxy, chuy·ªÉn cu·ªôc g·ªçi ƒë·∫øn remote
        service. Skeleton nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu v√† sau ƒë√≥ chuy·ªÉn n√≥ ƒë·∫øn m√°y b·∫Øn k·∫πo cao
        su.
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_55.png`),
          width: `60%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        3. <strong>GumballMachine </strong>return tr·∫°ng th√°i cho skeleton,
        <strong>serialize </strong>n√≥ v√† chuy·ªÉn n√≥ tr·ªü l·∫°i proxy. Proxy
        <strong>deserialize </strong>n√≥ v√† return n√≥ nh∆∞ m·ªôt object cho monitor.
      </p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_56.png`),
          width: `80%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `ƒê·ªãnh nghƒ©a Proxy Pattern`,
    contents: [
      {
        div: `<p>
        Ch√∫ng ta ƒë√£ c√≥ nhi·ªÅu trang ·ªü tr√™n ƒë·ªÉ gi·∫£i th√≠ch th√™m cho ƒë·ªãnh nghƒ©a n√†y; nh∆∞
        b·∫°n c√≥ th·ªÉ th·∫•y, vi·ªác gi·∫£i th√≠ch Remote Proxy kh√° li√™n quan. M·∫∑c d√π v·∫≠y, b·∫°n
        s·∫Ω th·∫•y r·∫±ng ƒë·ªãnh nghƒ©a v√† s∆° ƒë·ªì l·ªõp cho Proxy Pattern th·ª±c s·ª± kh√° ƒë∆°n gi·∫£n.
        L∆∞u √Ω r·∫±ng Remote Proxy l√† m·ªôt tri·ªÉn khai c·ªßa Proxy Pattern c∆° b·∫£n; th·ª±c t·∫ø c√≥
        kh√° nhi·ªÅu bi·∫øn th·ªÉ c·ªßa m·∫´u n√†y v√† ch√∫ng ta s·∫Ω n√≥i v·ªÅ ch√∫ng sau. C√≤n b√¢y gi·ªù,
        h√£y xem chi ti·∫øt c·ªßa m·∫´u Proxy Pattern c∆° b·∫£n.
      </p>
      
      <p>·ªû ƒë√¢y, ƒë·ªãnh nghƒ©a Proxy pattern:</p>`,
      },
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_57.png`),
          width: `50%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
      {
        div: `<p>
        <strong
          ><em
            >(Proxy Pattern cung c·∫•p m·ªôt ‚Äúƒë·∫°i di·ªán thay th·∫ø‚Äù ho·∫∑c ‚Äúgi·ªØ ch·ªó‚Äù cho m·ªôt
            ƒë·ªëi t∆∞·ª£ng kh√°c ƒë·ªÉ ki·ªÉm so√°t quy·ªÅn truy c·∫≠p v√†o n√≥)</em
          ></strong
        >
      </p>
      
      <p>
        S·ª≠ d·ª•ng Proxy Pattern ƒë·ªÉ t·∫°o m·ªôt ƒë·ªëi t∆∞·ª£ng ƒë·∫°i di·ªán ki·ªÉm so√°t quy·ªÅn truy c·∫≠p
        v√†o m·ªôt ƒë·ªëi t∆∞·ª£ng kh√°c, c√≥ th·ªÉ l√† ƒëi·ªÅu khi·ªÉn t·ª´ xa, t·ªën k√©m ƒë·ªÉ t·∫°o ho·∫∑c c·∫ßn
        b·∫£o m·∫≠t.
      </p>
      
      <p>
        Ch√†, ch√∫ng ta ƒë√£ th·∫•y c√°ch Proxy Pattern cung c·∫•p thay th·∫ø ho·∫∑c gi·ªØ ch·ªó cho
        m·ªôt ƒë·ªëi t∆∞·ª£ng kh√°c. Ch√∫ng ta c≈©ng ƒë√£ m√¥ t·∫£ proxy nh∆∞ l√† m·ªôt ‚Äúƒë·∫°i di·ªán‚Äù cho m·ªôt
        ƒë·ªëi t∆∞·ª£ng kh√°c.
      </p>
      
      <p>
        Nh∆∞ng proxy pattern ki·ªÉm so√°t truy c·∫≠p nh∆∞ th·∫ø n√†o? Nghe c√≥ v·∫ª h∆°i l·∫°. ƒê·ª´ng lo
        l·∫Øng. Trong tr∆∞·ªùng h·ª£p c·ªßa gumball machine, ch·ªâ c·∫ßn nghƒ© ƒë·∫øn proxy ki·ªÉm so√°t
        truy c·∫≠p v√†o ƒë·ªëi t∆∞·ª£ng t·ª´ xa. Proxy pattern c·∫ßn thi·∫øt ƒë·ªÉ ki·ªÉm so√°t quy·ªÅn truy
        c·∫≠p v√¨ client c·ªßa ch√∫ng ta, monitor, kh√¥ng bi·∫øt c√°ch n√≥i chuy·ªán v·ªõi m·ªôt ƒë·ªëi
        t∆∞·ª£ng ·ªü xa. V√¨ v·∫≠y, trong m·ªôt s·ªë tr∆∞·ªùng h·ª£p, remote proxy ki·ªÉm so√°t truy c·∫≠p
        ƒë·ªÉ n√≥ c√≥ th·ªÉ x·ª≠ l√Ω c√°c chi ti·∫øt m·∫°ng cho ch√∫ng ta. Nh∆∞ ch√∫ng ta v·ª´a th·∫£o lu·∫≠n,
        c√≥ r·∫•t nhi·ªÅu bi·∫øn th·ªÉ c·ªßa Proxy Pattern v√† c√°c bi·∫øn th·ªÉ th∆∞·ªùng xoay quanh c√°ch
        proxy ki·ªÉm so√°t truy c·∫≠p. Sau ƒë√≥, ch√∫ng ta s·∫Ω n√≥i th√™m v·ªÅ ƒëi·ªÅu n√†y sau (·ªü ph·∫ßn
        2), nh∆∞ng b√¢y gi·ªù ƒë√¢y l√† m·ªôt v√†i c√°ch ki·ªÉm so√°t truy c·∫≠p c·ªßa proxy:
      </p>
      
      <ul>
        <li>
          Nh∆∞ ch√∫ng ta bi·∫øt v√† th·∫£o lu·∫≠n b√™n tr√™n, m·ªôt Remote proxy ki·ªÉm so√°t truy c·∫≠p
          v√†o m·ªôt remote object.
        </li>
        <li>
          M·ªôt Virtual proxy (proxy ·∫£o) ki·ªÉm so√°t truy c·∫≠p v√†o m·ªôt t√†i nguy√™n, th·ª© s·∫Ω
          r·∫•t t·ªën k√©m ƒë·ªÉ t·∫°o ra.
        </li>
        <li>
          Protection proxy ki·ªÉm so√°t quy·ªÅn truy c·∫≠p v√†o t√†i nguy√™n d·ª±a tr√™n quy·ªÅn truy
          c·∫≠p
        </li>
      </ul>
      
      <p>
        B√¢y gi·ªù b·∫°n ƒë√£ bi·∫øt nh·ªØng kh√°i ni·ªám ch√≠nh c·ªßa m·∫´u Proxy pattern, h√£y xem s∆° ƒë·ªì
        l·ªõp‚Ä¶
      </p>`,
      },
    ],
  },
  {
    title: `S∆° ƒë·ªì l·ªõp Proxy Pattern`,
    contents: [
      {
        image: {
          src: require(`resources/img/ebook/vn/head-first-design-patterns/chapter-14_58.png`),
          width: `70%`,
          align: `center`,
        },
      },
      {
        div: `<br />`,
      },
    ],
  },
  {
    title: `H√£y xem qua s∆° ƒë·ªì Proxy Pattern‚Ä¶`,
    contents: [
      {
        div: `<p>
        ƒê·∫ßu ti√™n ch√∫ng ta c√≥ m·ªôt <strong>Subject</strong>, cung c·∫•p giao di·ªán cho
        <strong>RealSubject </strong>v√† <strong>Proxy</strong>.
      </p>
      
      <p>
        B·∫±ng c√°ch tri·ªÉn khai c√πng m·ªôt giao di·ªán, <strong>Proxy </strong>c√≥ th·ªÉ ƒë∆∞·ª£c
        thay th·∫ø cho <strong>RealSubject </strong>·ªü b·∫•t c·ª© n∆°i n√†o n√≥ xu·∫•t hi·ªán.
      </p>
      
      <p>
        <strong>RealSubject </strong>l√† ƒë·ªëi t∆∞·ª£ng th·ª±c hi·ªán c√¥ng vi·ªác th·ª±c s·ª±. N√≥ y√™u
        th√≠ch ƒë·ªëi t∆∞·ª£ng m√† <strong>Proxy </strong>ƒë·∫°i di·ªán v√† ki·ªÉm so√°t quy·ªÅn truy
        c·∫≠p.
      </p>
      
      <p>
        <strong>Proxy </strong>gi·ªØ m·ªôt tham chi·∫øu ƒë·∫øn <strong>RealSubject</strong>.
        Trong m·ªôt s·ªë tr∆∞·ªùng h·ª£p, Proxy c√≥ th·ªÉ ch·ªãu tr√°ch nhi·ªám t·∫°o v√† h·ªßy
        <strong>RealSubject</strong>. Client t∆∞∆°ng t√°c v·ªõi
        <strong>RealSubject </strong>th√¥ng qua <strong>Proxy</strong>. V√¨
        <strong>Proxy </strong>v√† <strong>RealSubject </strong>implements c√πng m·ªôt
        giao di·ªán (Subject), Proxy c√≥ th·ªÉ ƒë∆∞·ª£c thay th·∫ø ·ªü b·∫•t k·ª≥ n∆°i n√†o c√≥ th·ªÉ s·ª≠
        d·ª•ng subject. Proxy c≈©ng ki·ªÉm so√°t quy·ªÅn truy c·∫≠p v√†o
        <strong>RealSubject</strong>; ƒëi·ªÅu khi·ªÉn n√†y c√≥ th·ªÉ c·∫ßn thi·∫øt n·∫øu
        <strong>Subject </strong>ƒëang ch·∫°y tr√™n m·ªôt m√°y t·ª´ xa, n·∫øu
        <strong>Subject </strong>t·ªën k√©m ƒë·ªÉ t·∫°o theo m·ªôt c√°ch n√†o ƒë√≥ ho·∫∑c n·∫øu quy·ªÅn
        truy c·∫≠p v√†o <strong>Subject </strong>c·∫ßn ƒë∆∞·ª£c b·∫£o v·ªá theo m·ªôt c√°ch n√†o ƒë√≥.
      </p>
      
      <p>
        B√¢y gi·ªù b·∫°n ƒë√£ hi·ªÉu m·∫´u c∆° b·∫£n, h√£y c√≥ m·ªôt c√°i nh√¨n kh√°c v·ªÅ c√°ch s·ª≠ d·ª•ng proxy
        ngo√†i Remote Proxy‚Ä¶
      </p>`,
      },
      {
        div: `<p>
        (ƒê√≥n xem..<a
          rel="noreferrer noopener"
          href="/react-admin/#/ebook/vietnamese/head-first-design-patterns/15"
          target="_blank"
          >.</a
        >Proxy Pattern ‚Äì Ki·ªÉm so√°t truy c·∫≠p ƒë·ªëi t∆∞·ª£ng ph·∫ßn 2).
      </p>`,
      },
    ],
  },
  {
    title: 'Tham kh·∫£o',
    contents: [
      {
        div: `<p>
        Link ƒë√≠nh k√®m b·∫£n g·ªëc c·ªßa quy·ªÉn s√°ch:&nbsp;<a
          rel="noreferrer noopener"
          href="https://drive.google.com/file/d/14lMY_ot5FHgX7aOR9YiVjR2iD1DdJ6hZ/view?usp=sharing"
          target="_blank"
          >Head First Design Patterns</a
        >.<br />Link ƒë√≠nh k√®m sourcecode c·ªßa s√°ch:&nbsp;<a
          rel="noreferrer noopener"
          href="https://resources.oreilly.com/examples/9780596007126"
          target="_blank"
          >T·∫£i SourceCode</a
        >.
      </p>`,
      },
      {
        p: `Ngu·ªìn b√†i d·ªãch: <b>NQT-K4DNC</b>
        <br />
        Ch·ªânh s·ª≠a b·ªüi: <b>T√¥i h·ªçc Design pattern</b>`,
      },
    ],
  },
];
